##
# System-wide .bashrc file for interactive bash(1) shells.
# Functions and aliases, environment stuff goes in /etc/profile
#
# Copyright 2011 by Andrew Kennedy; All Rights Reserved
#
# Author: Andrew Kennedy <andrew.international@gmail.com>
# Last modified: 201107051945
##
#set -x # debug

# By default, we want this to get set, even for non-interactive, non-login shells.
if [ "${UID}" -gt 99 ] && [ "$(id -gn)" = "$(id -un)" ]; then
    umask 002
else
    umask 022
fi

# Are we an interactive shell?
if [ -z "$PS1" ]; then
   return
fi

# Command aliases

# Set ls options
alias ls='ls -FGh'
# List file pointed to by which
function what() { ls -l $(which "$@"); }
# Reset location after disk re-mount
alias ccd='cd $(pwd -P)'
# Resume an scp file copy that was interrupted
alias rcp='rsync --partial --progress --rsh=ssh'
# Execute vi as root
alias svi='sudo vi'

# Function definitions

# Kill process that owns a port
function kp() {
    port=$1
    signal=${2:-"-9"}
    lsof -i TCP:${port} -t | xargs kill ${signal}
}

# List all processes with specific name that have TCP ports open
function pp() {
    name=${1:-".*"}
    lsof -i TCP:1-65535 |
        grep "${name}"
}

# Kill all processes with specific name that have TCP ports open
function kk() {
    name=${1:-".*"}
    signal=${2:-"-9"}
    lsof -i TCP:1-65535 |
        grep "${name}" |
        awk  '{ print $2; }' |
        uniq |
        xargs kill ${signal}
}

# Mount a disk image file (for .dmg files)
function mntimg() {
    file=$1
    if [ -f "${file}" ]; then
        name=$(basename "${file}" .dmg)
        mkdir "/Volumes/${name}"
        hdiutil attach "${file}" -mountpoint "/Volumes/${name}"
    else
        echo "File ${file} does not exist"
        exit 1
    fi
}

# Add a directory to PATH at the start or end
# Usage: pathmunge dir [ after ]
function pathmunge () {
    dir=$1
	if ! echo "${PATH}" | egrep -q "(^|:)${dir}($|:)"; then
		if [ "$2" = "after" ] ; then
			PATH="${PATH}:${dir}"
		else
			PATH="${dir}:${PATH}"
		fi
	fi
}

# Set the prompt to display information about the current directory and the
# git branch and work in progress status (if inside a checked out repository)
# on the title bar of the window.
case "${TERM}" in
    xterm*|ansi|screen)
        PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/~}$(__git_ps1)\007"';
esac
shopt -s checkwinsize # Turn on checkwinsize
PS1="[\u@\h \W\$(__git_ps1)]\\$ "

# Execute local bashrc if it exists
if [ -f "${HOME}/.bashrc" ]; then
    . ${HOME}/.bashrc
fi

# vim:ts=4:sw=4
